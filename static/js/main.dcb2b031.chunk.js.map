{"version":3,"sources":["components/searchBox.js","components/dropDown.js","components/Navigation.js","components/viewDetail.js","components/Movie.js","components/movieGrid.js","components/moviePage.js","components/mainComponent.js","components/ActorInfo.js","components/Footer.js","App.js","index.js"],"names":["SearchBox","props","useState","isHidden","setIsHidden","Form","inline","className","onSubmit","evt","preventDefault","handleSubmit","expand","FormControl","onChange","handleChange","type","placeholder","onKeyDown","e","Button","variant","Spinner","animation","size","hidden","DropDown","Fragment","Control","as","handleGenreChange","genreList","map","genre","id","key","value","name","Navigation","history","useHistory","Navbar","bg","Brand","href","Nav","Link","onClick","push","ViewDetail","Movie","Col","lg","md","xs","Card","style","width","Img","src","image","alt","Body","Title","title","to","MovieGrid","movies","movie","index","poster_path","overview","popularity","release_date","handleViewDetailClick","MoviePage","params","useParams","location","useLocation","setMovie","trailers","setTrailers","cast","setCast","useEffect","console","log","fetchMovie","fetchVideos","fetchCredits","fetch","then","resp","json","results","Container","Row","Image","rounded","fluid","original_title","status","genres","trailer","allowFullScreen","actor","character","MainComponent","ActorInfo","actorInfo","setActorInfo","setImage","fetchActorInfo","fetchImages","actor_id","profiles","goBack","file_path","birthday","known_for_department","place_of_birth","Footer","target","App","movieList","setMovieList","searchedTerm","setSearchedTerm","setGenreList","genreId","setGenreId","fetchGenres","fetchPopularMovies","data","filtered","filter","genre_ids","includes","parseInt","query","atob","path","exact","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcb2b031.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { useState } from \"react\";\nimport { Form, FormControl, Button, Spinner } from \"react-bootstrap\";\n\nfunction SearchBox(props) {\n  const [isHidden, setIsHidden] = useState(true);\n\n  function handleOnKeyDown(e) {\n    setIsHidden(false);\n  }\n  function handleSubmit(e) {\n    setIsHidden(!isHidden);\n  }\n\n  return (\n    <>\n      <Form\n        inline\n        className=\"search-box\"\n        onSubmit={(evt) => {\n          evt.preventDefault();\n          handleSubmit();\n          props.handleSubmit();\n        }}\n        expand=\"md\"\n      >\n        <div>\n          <FormControl\n            onChange={props.handleChange}\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"mr-sm-2\"\n            onKeyDown={handleOnKeyDown}\n            expand=\"md\"\n          />\n\n          <Button type=\"submit\" variant=\"outline-light\">\n            <Spinner\n              animation=\"grow\"\n              variant=\"danger\"\n              size=\"sm\"\n              hidden={isHidden}\n            />\n            Search\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n}\n\nexport default SearchBox;\n","import React, { useState, useEffect } from \"react\";\nimport { Dropdown, Button, Form } from \"react-bootstrap\";\n\nconst DropDown = (props) => {\n  return (\n    <React.Fragment>\n      <Form.Control\n        as=\"select\"\n        onChange={props.handleGenreChange}\n        className=\"drop-down\"\n      >\n        {props.genreList.map((genre) => {\n          return (\n            <option id={genre.id} key={genre.id} value={genre.id}>\n              {genre.name}\n            </option>\n          );\n        })}\n      </Form.Control>\n    </React.Fragment>\n  );\n};\n\nexport default DropDown;\n","import React, { Component } from \"react\";\nimport SearchBox from \"./searchBox\";\nimport DropDown from \"./dropDown\";\nimport { useState } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport {Link , useHistory} from 'react-router-dom'\n\nfunction Navigation(props) {\n  const history = useHistory()\n  const hanleClick = ()=>{\n        history.push('/')\n  }\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\n        <Navbar.Brand href=\"#home\" className=\"text-danger\">\n          {props.name}\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n         <Nav.Link onClick={hanleClick} href=\"#home\">Home</Nav.Link>  \n          <Nav.Link href=\"#features\">Movies</Nav.Link>\n          <Nav.Link href=\"#pricing\">Series</Nav.Link>\n        </Nav>\n\n        <DropDown\n          handleGenreChange={props.handleGenreChange}\n          genreList={props.genreList}\n        />\n\n        <SearchBox\n          handleSubmit={props.handleSubmit}\n          handleChange={props.handleChange}\n        />\n      </Navbar>\n    </>\n  );\n}\nexport default Navigation;","import React, { useState } from \"react\";\nimport { Modal, Button, Col } from \"react-bootstrap\";\nfunction ViewDetail(props) {\n  const [show, setShow] = useState();\n\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n      <Button variant=\"danger\" onClick={handleShow}>\n        View Detail\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p> {props.overview}</p>\n          <hr />\n          <p>Rlease date : {props.release_date}</p>\n          <p>Popularity : {props.popularity}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ViewDetail;\n","import React from \"react\";\nimport { Card, Button, Col } from \"react-bootstrap\";\nimport ViewDetail from \"./viewDetail\";\nimport { Link } from \"react-router-dom\";\nfunction Movie(props) {\n  return (\n    <Col lg={4} md={6} xs={12}>\n      <Card className=\"m-3 scale\" style={{ width: \"18rem\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={`https://image.tmdb.org/t/p/w500/${props.image}`}\n          alt=\"not working\"\n        />\n        <Card.Body>\n          <Card.Title>{props.title}</Card.Title>\n\n          <Link to={`/${props.id}`}>\n            <Button variant=\"danger\">ViewDetail</Button>\n          </Link>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Movie;\n","import React from \"react\";\nimport Movie from \"./Movie\";\nconst MovieGrid = props => {\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-5\">\n        {props.movies.map((movie, index) => {\n          return (\n            <Movie\n              image={movie.poster_path}\n              title={movie.title}\n              overview={movie.overview}\n              popularity={movie.popularity}\n              release_date={movie.release_date}\n              id={movie.id}\n              key={index}\n              handleViewDetailClick={props.handleViewDetailClick}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default MovieGrid;\n\n","import React from \"react\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Button,\n  ResponsiveEmbed,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\n\nfunction MoviePage() {\n  const params = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [trailers, setTrailers] = useState([]);\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    console.log(location);\n    console.log(history);\n\n    fetchMovie();\n    fetchVideos();\n    fetchCredits();\n  }, []);\n\n  const fetchMovie = () => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${params.id}?api_key=7a757097cf4698b75ed2848485f49571&language=en-US`\n    )\n      .then((resp) => resp.json())\n      .then((resp) => setMovie(resp));\n  };\n\n  const fetchVideos = () => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${params.id}/videos?api_key=7a757097cf4698b75ed2848485f49571&language=en-US`\n    )\n      .then((resp) => resp.json())\n      .then((resp) => setTrailers(resp.results));\n  };\n\n  const fetchCredits = () => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${params.id}/credits?api_key=7a757097cf4698b75ed2848485f49571`\n    )\n      .then((resp) => resp.json())\n      .then((resp) => {\n        setCast(resp.cast);\n      });\n  };\n\n  return (\n    <>\n      <Container className=\"margin-top\">\n        <Row className=\"margin-top\">\n          <Link to=\"/\">\n            {\" \"}\n            <Button variant=\"danger\">Back</Button>{\" \"}\n          </Link>\n        </Row>\n        <Row>\n          <Col lg={6} md={5} xs={12}>\n            <Image\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              rounded\n              fluid\n            />\n          </Col>\n          <Col lg={6} md={5} xs={12}>\n            <h1>{movie.original_title}</h1>\n\n            <h2> Movie overview</h2>\n            {movie.overview}\n            <hr />\n            <h2> Movie Popularity</h2>\n            {movie.popularity}\n            <hr />\n            <h2> Status</h2>\n            {movie.status}\n            <hr />\n            <h2> Genres</h2>\n            <hr />\n\n            {movie.id &&\n              movie.genres.map((genre) => {\n                return <li key={genre.id}>{genre.name}</li>;\n              })}\n            <hr />\n          </Col>\n        </Row>\n      </Container>\n      <Container>\n        <Row>\n          <Col>\n            <h2> Trailers</h2>\n            <hr />\n            {movie.id &&\n              trailers.map((trailer) => {\n                return (\n                  <div className=\"embed-responsive embed-responsive-16by9 mb-4\">\n                    <iframe\n                      className=\"embed-responsive-item\"\n                      src={`https://www.youtube.com/embed/${trailer.key}`}\n                      allowFullScreen\n                      key={trailer.id}\n                    />\n                  </div>\n                );\n              })}\n          </Col>\n        </Row>\n        <br />\n\n        <br />\n        <Row>\n          <Col className=\"mb-4\">\n            <h2>Actors</h2>\n            <hr />\n            {movie.id &&\n              cast.map((actor) => {\n                return (\n                  <h4>\n                    <Link to={`/person/${actor.id}`}>\n                      {\" \"}\n                      {actor.name} ({actor.character})\n                    </Link>\n                  </h4>\n                );\n              })}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default MoviePage;\n","import React, { Component } from \"react\";\nimport MovieGrid from \"./movieGrid\";\nimport { useState } from \"react\";\nimport MoviePage from \"./moviePage\";\nfunction MainComponent(props) {\n  return (\n    <>\n      <MovieGrid movies={props.movies} />\n    </>\n  );\n}\nexport default MainComponent;\n","import React from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\nfunction ActorInfo() {\n  const params = useParams();\n  const history = useHistory();\n  const [actorInfo, setActorInfo] = useState({});\n  const [image, setImage] = useState({});\n  useEffect(() => {\n    console.log(history);\n    fetchActorInfo();\n    fetchImages();\n  }, []);\n\n  const fetchActorInfo = () => {\n    fetch(\n      `https://api.themoviedb.org/3/person/${\n        params.actor_id\n      }?api_key=7a757097cf4698b75ed2848485f49571&language=en-US&append_to_response=${\n        params.actor_id\n      }`\n    )\n      .then(resp => resp.json())\n      .then(resp => setActorInfo(resp));\n  };\n\n  const fetchImages = () => {\n    fetch(`https://api.themoviedb.org/3/person/${\n      params.actor_id\n    }/images?api_key=7a757097cf4698b75ed2848485f49571\n    `)\n      .then(resp => resp.json())\n      .then(resp => setImage(resp.profiles[0]));\n  };\n\n  const handleClick = () => {\n    history.goBack();\n  };\n  return (\n    <React.Fragment>\n      <Container className=\"margin-top\">\n        <Row className=\"margin-top\">\n          <Button onClick={handleClick} variant=\"danger\">\n            Back\n          </Button>{\" \"}\n        </Row>\n        <Row>\n          <Col lg={6} md={5} xs={12}>\n            {actorInfo.id && (\n              <Image\n                fluid\n                src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\n                rounded\n              />\n            )}\n          </Col>\n          <Col lg={6} md={5} xs={12}>\n            <h2>{actorInfo.name}</h2>\n            <hr />\n            <h4>Birthdate</h4>\n            <p>{actorInfo.birthday}</p>\n            <hr />\n            <h4>Occupation</h4>\n            <p>{actorInfo.known_for_department}</p>\n            <hr />\n            <h4>Place og birth</h4>\n            <p>{actorInfo.place_of_birth}</p>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default ActorInfo;\n","import React from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nfunction Footer() {\n  return (\n    <>\n      <footer className=\"bg-dark text-white p-3\">\n        <Container>\n          <Row>\n            <Col lg={6} md={6} xs={12}>\n              <h2>\n                Grab your popcorn and enjoy your night with\n                <span className=\"text-danger\"> Netplex</span>\n              </h2>\n            </Col>\n            <Col lg={6} md={6} xs={12}>\n              {\" \"}\n              <nav className=\"nav flex-column\">\n                {\" \"}\n                <strong>Founders:</strong>\n                <a\n                  className=\"nav-link text-danger\"\n                  href=\"https://github.com/evanhameed99\"\n                  target=\"_blank\"\n                >\n                  Evan Hameed\n                </a>\n                <a className=\"nav-link text-danger\" href=\"#\">\n                  Sara\n                </a>\n                <a className=\"nav-link text-danger\" href=\"#\">\n                  Jalal\n                </a>\n              </nav>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport MainComponent from \"./components/mainComponent\";\nimport ActorInfo from \"./components/ActorInfo\";\nimport Footer from \"./components/Footer\";\nimport { useState, useEffect } from \"react\";\nimport MoviePage from \"./components/moviePage\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  const [movieList, setMovieList] = useState([]);\n  const [searchedTerm, setSearchedTerm] = useState(\"\");\n  const [genreList, setGenreList] = useState([]);\n  const [genreId, setGenreId] = useState(28);\n  const history = useHistory();\n\n  const TMDB_BASE_URL = \"https://api.themoviedb.org/3\";\n  const constructUrl = (query) => {\n    return `${TMDB_BASE_URL}/search/movie?api_key=${atob(\n      \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\n    )}&query=${query}`;\n  };\n\n  useEffect(() => {\n    fetchGenres();\n    fetchPopularMovies();\n  }, [genreId]);\n\n  const fetchGenres = () => {\n    fetch(\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=542003918769df50083a13c415bbc602&language=en-US\"\n    )\n      .then((data) => data.json())\n      .then((genres) => {\n        setGenreList(genres.genres);\n      });\n  };\n\n  const fetchPopularMovies = () => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=7a757097cf4698b75ed2848485f49571&language=en-US&page=1`\n    )\n      .then((resp) => resp.json())\n      .then((resp) => {\n        const filtered = resp.results.filter((movie) =>\n          movie.genre_ids.includes(parseInt(genreId))\n        );\n        setMovieList(filtered);\n      });\n  };\n\n  function handleGenreChange(evt) {\n    setGenreId(evt.target.value);\n\n    console.log(genreId);\n  }\n  function handleSubmit(e) {\n    fetch(constructUrl(searchedTerm))\n      .then((data) => data.json())\n      .then((data) => {\n        const filtered = data.results.filter((movie) =>\n          movie.genre_ids.includes(parseInt(genreId))\n        );\n        setMovieList(filtered);\n      });\n  }\n\n  function handleChange(e) {\n    setSearchedTerm(e.target.value);\n  }\n\n  return (\n    <>\n      <Router>\n        <Navigation\n          genreList={genreList}\n          handleSubmit={handleSubmit}\n          handleChange={handleChange}\n          handleGenreChange={handleGenreChange}\n          name=\"Netplex \"\n        />\n        <div className=\"main-wrapper\">\n          <Redirect to=\"/\" />\n          <Switch>\n            <Route path=\"/\" exact>\n              {\" \"}\n              <MainComponent movies={movieList} />\n            </Route>\n            <Route path=\"/:id\" exact component={MoviePage} />\n            <Route path=\"/person/:actor_id\" component={ActorInfo} />\n            <Route\n              render={() => {\n                return <h1>Page not found (404)</h1>;\n              }}\n            />\n          </Switch>\n        </div>\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}